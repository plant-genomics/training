{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Under development: 2020 Welcome to plant genomics training What\u2019s here? This website contains training, resources and links for plant genomics and bioinformatics. The website is under development and will expand over the next three years. We welcome your contributions! In particular, we are looking for tutorials covering concepts, software, and workflows for common analyses in plant genomics. If you have any that you wish to share, or any corrections or suggestions for the website, please email anna.syme @ rbg.vic.gov.au. More information about page content and contributing is at the GitHub repository https://github.com/plant-genomics/training . Show or hide the left-hand menu click the icon in the top menu bar that looks like this Find information click on the topics in the left-hand menu or use the search bar in the top right corner Return to this home page click on the leaf icon in the top left corner Funders and supporters This training aims to support the Australian plant genomics community as part of the Genomics for Australian Plants project (link) , by Bioplatforms Australia. This nationally-inclusive and collaborative initiative is supported by funding from Bioplatforms Australia through the Australian Government National Collaborative Research Infrastructure Strategy (NCRIS), the Ian Potter Foundation, Royal Botanic Gardens Victoria, the Royal Botanic Gardens and Domain Trust, CSIRO, Centre for Australian National Biodiversity Research and the Department of Biodiversity, Conservation and Attractions, Western Australia.","title":"Home"},{"location":"#welcome-to-plant-genomics-training","text":"","title":"Welcome to plant genomics training"},{"location":"#whats-here","text":"This website contains training, resources and links for plant genomics and bioinformatics. The website is under development and will expand over the next three years. We welcome your contributions! In particular, we are looking for tutorials covering concepts, software, and workflows for common analyses in plant genomics. If you have any that you wish to share, or any corrections or suggestions for the website, please email anna.syme @ rbg.vic.gov.au. More information about page content and contributing is at the GitHub repository https://github.com/plant-genomics/training . Show or hide the left-hand menu click the icon in the top menu bar that looks like this Find information click on the topics in the left-hand menu or use the search bar in the top right corner Return to this home page click on the leaf icon in the top left corner","title":"What's here?"},{"location":"#funders-and-supporters","text":"This training aims to support the Australian plant genomics community as part of the Genomics for Australian Plants project (link) , by Bioplatforms Australia. This nationally-inclusive and collaborative initiative is supported by funding from Bioplatforms Australia through the Australian Government National Collaborative Research Infrastructure Strategy (NCRIS), the Ian Potter Foundation, Royal Botanic Gardens Victoria, the Royal Botanic Gardens and Domain Trust, CSIRO, Centre for Australian National Biodiversity Research and the Department of Biodiversity, Conservation and Attractions, Western Australia.","title":"Funders and supporters"},{"location":"modules/assembly/","text":"Assembly tools Canu For noisy long-read assemblies. Github: https://github.com/marbl/canu Manual: https://canu.readthedocs.io/en/latest/ wtdbg2 For noisy long-read assemblies. Does not error-correct the reads: fast; uses \u201cfuzzy\u201d de Bruijn graphs. Github: https://github.com/ruanjue/wtdbg2 Masurca Joins short reads into super-reads; for hybrid assemblies Github: https://github.com/alekseyzimin/masurca/releases Blog: http://masurca.blogspot.com/ Flye For noisy long-read assemblies Does not error-correct the reads: fast. Github: https://github.com/fenderglass/Flye Supernova For assembling 10x (linked) reads Information: https://support.10xgenomics.com/de-novo-assembly/software/pipelines/latest/using/running miniasm https://github.com/lh3/miniasm Racon Pilon Nanopolish","title":"Assembly"},{"location":"modules/assembly/#assembly-tools","text":"Canu For noisy long-read assemblies. Github: https://github.com/marbl/canu Manual: https://canu.readthedocs.io/en/latest/ wtdbg2 For noisy long-read assemblies. Does not error-correct the reads: fast; uses \u201cfuzzy\u201d de Bruijn graphs. Github: https://github.com/ruanjue/wtdbg2 Masurca Joins short reads into super-reads; for hybrid assemblies Github: https://github.com/alekseyzimin/masurca/releases Blog: http://masurca.blogspot.com/ Flye For noisy long-read assemblies Does not error-correct the reads: fast. Github: https://github.com/fenderglass/Flye Supernova For assembling 10x (linked) reads Information: https://support.10xgenomics.com/de-novo-assembly/software/pipelines/latest/using/running miniasm https://github.com/lh3/miniasm Racon Pilon Nanopolish","title":"Assembly tools"},{"location":"modules/chloroplast_assembly/","text":"Assemble and annotate a chloroplast genome *New* Feedback, comments, corrections: anna.syme @ rbg.vic.gov.au What is genome assembly? Genome assembly is the process of joining together DNA sequencing fragments into longer pieces, ideally up to chromosome lengths. The DNA fragments are produced by DNA sequencing machines, and are called \u201creads\u201d. These are in lengths of about 150 nucleotides (base pairs), to up to a million+ nucleotides, depending on the sequencing technology used. Currently, most reads are from Illumina (short), PacBio (long) or Oxford Nanopore (long and extra-long). It is difficult to assemble plant genomes as they are often large (for example, 3,000,000,000 base pairs), have many repeat regions (such as transposons), and may be polyploid. This tutorial shows genome assembly for a smaller data set - the plant chloroplast genome - a single circular chromosome about 160,000 base pairs long. What\u2019s in this tutorial? The chloroplast genome of the sweet potato has been sequenced. This has produced many sequencing reads - DNA fragments. We will try to join these reads together to make the whole chloroplast genome sequence. We will use the Galaxy Australia platform (a web page) to run our analysis. This tutorial assumes some familiarity with Galaxy and bioinformatics - if you are new to either of these, we recommend the Galaxy Australia Training tutorials Get started, Learn key tasks, Quality control, Genome assembly, and Genome annotation , as this chloroplast genome assembly tutorial is slightly more complicated. You can follow all the steps, or skip any optional steps: Get data \u2192 Read quality \u2192 Assemble\u2192 Polish \u2192 View reads \u2192 Annotate \u2192 Repeat with new data What\u2019s not in this tutorial? The best assembly of the sweet potato chloroplast data: here, we are using a data subset. A full explanation of all the steps involved and all the possible variations in the workflow; answers to some of the questions. A workflow to assemble and annotate the chloroplast genome of any plant species: in this tutorial some steps are manual, and tools and settings may not be optimal for other plant species. A workflow to assemble the nuclear genome of any plant species. The process shown here is generally applicable to assembling plant nuclear genomes but there would be extra steps (and much more time) involved. For example, additional sequencing would usually be run on 10X, BioNano or HiC to produce information to link up longer nuclear chromosome pieces and to separate out the maternal and paternal haplotypes. Get data Log in to Galaxy Australia and create a new history. The data is from this paper: Zhou C, Duarte T, Silvestre R et al. 2018 , hosted at EBI ENA. Original FASTQ reads: Illumina (SRR6828568) and Nanopore (SRR6828567). These data sets have been highly reduced in size for this tutorial. In a new browser tab, go to this webpage https://zenodo.org/record/3567224 Find the file called sweet-potato-chloroplast-illumina-reduced.fastq Right click on file name: select \u201ccopy link address\u201d In Galaxy, go to Get Data and then Upload File Click Paste/Fetch data A box will appear: paste in link address Click Start ; click Close The file will now appear in the top of your history panel. Repeat for the Nanopore reads sweet-potato-chloroplast-nanopore-reduced.fastq We now have two FASTQ read files in our history. Click on the eye icon next to one of the FASTQ sequence files. View the file in the centre Galaxy panel. Check read quality Optional. Skip this section for a quicker tutorial We will look at the quality of the nanopore reads. In the tool panel, search for Nanoplot For Select multifile mode select batch . For Type of file to work on select fastq For files select the nanopore FASTQ file Click Execute There are five output files. View the Histogram Read Length file What summary statistics would be useful to look at? Click for answer This will depend on the aim of your analysis, but usually: Sequencing depth (the number of reads covering each base position; also called \u201ccoverage\u201d). Higher depth is usually better, but at very high depths it may be better to subsample the reads, as errors can swamp the assembly graph. Sequencing quality (the quality score indicates probability of base call being correct). You may trim or filter reads on quality. Phred quality scores are logarithmic: phred quality 10 = 90% chance of base call being correct; phred quality 20 = 99% chance of base call being correct. More detail here . Read lengths (read lengths histogram, and reads lengths vs. quality plots). Your analysis or assembly may need reads of a certain length. Optional further steps: Find out the quality of your reads using other tools such as fastp or FastQC. To visualize base quality using emoji you can also use FASTQE :smile: Run FASTQE for the illumina reads. In the output, look at the mean values (the middle row) Repeat FASTQE for the nanopore reads. In the tool settings, increase the maximum read length to 30000. Assemble reads Assemble: In the tool panel, search for \u201cFlye\u201d. For Input reads select sweet-potato-chloroplast-nanopore-reduced.fastq Leave other settings as default, except for estimated genome size add 160000 Click Execute View assembly outputs: There are five output files. Note: this tool is heuristic; your results may differ slightly from the results here, and if repeated. View the log file and scroll to the end. How many contigs (fragments) were assembled? What is the length of the assembly? View the assembly_info file. What are the contig names and lengths? The assembly sequence is in the consensus . Re-name this flye-assembly.fasta View the assembly: In the tool panel, search for \u201cBandage\u201d. Run \u201cBandage Info\u201d on the Flye output file Graphical Fragment Assembly (not the \u201cassembly_graph\u201d file) with the default settings. View the ouput file: how many nodes and edges are there? Run \u201cBandage Image\u201d on the Flye output file Graphical Fragment Assembly , clicking \u201cYes\u201d to display \u201cNode length labels\u201d. (Note that some text may be cut off this image due to a bug, under investigation). Your assembly graph may look like this: What is your interpretation of this assembly graph? Click for answer One interpretation is that this represents the typical circular chloroplast structure: There is a long single-copy region (the node of around 78,000 bp), connected to the inverted repeat (a node of around 28,000 bp), connected to the short single-copy region (of around 11,000 bp). In the graph, each end loop is a single-copy region (either long or short) and the centre bar is the collapsed inverted repeat which should have about twice the sequencing depth. Optional further steps: Repeat the Flye assembly with different parameters, and/or a filtered read set. Try an alternative assembly tool, such as Canu or Unicycler. Polish assembly Short illumina reads are more accurate the nanopore reads. We will use them to correct errors in the nanopore assembly. Map short reads to the assembly: In the tool panel, search for \u201cbwa mem\u201d, and click on \u201cMap with BWA-MEM\u201d For Will you select a reference genome from your history select Use a genome from history For Use the following dataset as the reference sequence select flye-assembly.fasta For Algorithm for constructing the BWT index select Auto. Let BWA decide For Single or Paired-end reads select Single For Select fastq dataset select sweet-potato-illumina-reduced.fastq For Set read groups information? select Do not set For Select analysis mode select 1. Simple Illumina mode Click Execute This maps the short reads to the assembly, and creates an alignment file. Re-name this file illumina.bam Polish the assembly: In the tool panel, search for \u201cpilon\u201d, and click on \u201cpilon\u201d For Source for reference genome used for BAM alignments select Use a genome from history For Select a reference genome select flye-assembly.fasta For Type automatically determined by pilon click Yes For Input BAM file select illumina.bam For Variant calling mode select No For Create changes file select Yes Click Execute This compares the short reads to the assembly, and creates a polished (corrected) assembly file. There are two outputs: a fasta file and a changes file. What is in the changes file? Re-name the fasta output file polished-assembly.fasta Find and run the tool called \u201cFasta statistics\u201d on the original flye assembly and the polished version. How does the short-read Pilon-polished assembly compare to the unpolished flye-assembly.fasta ? Click for answer This will depend on the settings, but as an example: your polished assembly might be about 10-15 Kbp longer. Nanopore reads can have homopolymer deletions - a run of AAAA may be interpreted as AAA - so the more accurate illumina reads may correct these parts of the long-read assembly. In the Changes file, there may be a lot of cases showing a supposed deletion (represented by a dot) being corrected to a base. Optional further steps: Run a second round (or more) of Pilon polishing. Keep track of file naming; you will need to generate a new bam file first before each round of Pilon. Run an alternative polishing tool, such as Racon. This uses the long reads themselves to correct the long-read (Flye) assembly. It would be better to run this tool on the Flye assembly before running Pilon, rather than after Pilon. View reads Optional. Skip this entire section for a quicker tutorial We will look at the original sequencing reads mapped to the genome assembly. In a new browser tab, go to this webpage https://zenodo.org/record/3567224 See the two files with the \u201c-tiny\u201d in their file name. These are very cut-down files of sequencing reads. Upload these files to Galaxy. Map the reads: Map the Illumina reads (the new \u201ctiny\u201d dataset) to the polished-assembly.fasta , the same way we did before, using bwa mem. This creates one output file: re-name it illumina-tiny.bam Map the Nanopore reads (the new \u201ctiny\u201d dataset) to the polished-assembly.fasta . The settings will be the same, except Select analysis mode should be Nanopore . This creates one output file: re-name it nanopore-tiny.bam Create a visualization of the mapped reads: In the tool panel, search for \u201cJBrowse\u201d, and click on \u201cJBrowse genome browser\u201d This tool creates a visualization of our genome assembly with some of the original sequencing reads mapped to it. For Reference genome to display select Use a genome from history For Select the reference genome select polished-assembly.fasta For Produce Standalone Instance select Yes For Genetic Code select 11. The Bacterial, Archaeal and Plant Plastid Code For JBrowse-in-Galaxy Action select New JBrowse instance Insert Track Group Now we\u2019ll set up two tracks (or rows) to display underneath the assembled genome. One track will be the nanopore reads; one track will be the illumina reads. Insert Annotation Track . This is our first track, or row, to be displayed under the reference genome. For Track Type select BAM pileups For BAM track data select nanopore-tiny.bam . For Autogenerate SNP track click No . Leave the other track features as default. Insert Annotation Track . This is our second track, or row, to be displayed under the reference genome. For Track Type select BAM pileups For BAM track data select illumina-tiny.bam . For Autogenerate SNP track click No . Leave the other track features as default. Click Execute This may take a few minutes. There is one output file: re-name: assembly-and-reads View the JBrowse file: Click on the eye icon to view. (For more room, collapse Galaxy side menus with corner < > signs). Make sure the bam files are ticked in the left hand panel. Choose a contig in the drop down menu. Zoom in and out with + and - buttons. Reference and reads: zoomed-out view What are some reasons that the read coverage may vary across the reference genome? Click for answer There may be lots of reasons. Some possibilities: 1/ In areas of high read coverage: this region may be a collapsed repeat. 2/ In areas of low or no coverage: this region may be difficult to sequence; or, this region may be a misassembly. Reference and reads: zoomed-in view What are the differences between the nanopore and the illumina reads? Click for answer Nanopore reads are longer and have a higher error rate. Annotate genome Optional. Skip this section for a quicker tutorial We can now annotate our assembled genome with information about genomic features. Use a web-based tool to annotate: Download polished.fasta to your computer (click on the file in your history; then click on the disk icon). In a new broswer tab, go to Chlorobox where we will use the GeSeq tool to annotate our sequence. For FASTA file to annotate click + Upload File and select polished.fasta . Select Circular (it will then consider annotations that span ends) and Plastid . For Options tick Generate codon-based alignments For BLAT search leave defaults. For HMMER profile search tick Embryophta . For ARAGORN tick the box and leave defaults. For BLAT Reference Sequences tick MPI-MP chloroplast refrences For Actions , tick to accept the Disclaimer and Submit . A Results box will appear underneath and fill with files as they are created. When job status is finished , click on each of the OGDRAW files to view the annotations. Example of an annotated contig: For the longer contig, click on its GFF3 file, then click Download . (We will look at this contig only.) View the annotations in Galaxy: In Galaxy, in the tool panel, Get Data : Upload File : Choose local file GFF3 file : Start : Close Make a JBrowse file to view the annotations (the GFF3 file) under the assembly (the polished.fasta file). In the tool panel, search for \u201cJBrowse\u201d, and click on \u201cJBrowse genome browser\u201d For Reference genome to display select Use a genome from history For Select the reference genome select polished-assembly.fasta For Produce Standalone Instance select Yes For Genetic Code select 11. The Bacterial, Archaeal and Plant Plastid Code For JBrowse-in-Galaxy Action select New JBrowse instance Insert Track Group Insert Annotation Track . For Track Type select GFF/GFF3/BED/GBK Features For GFF/GFF3/BED Track Data select the GFF3 annotation file. Click Execute This may take a few minutes. There is one output file: re-name: view-annotations Click on the eye icon to view. Select the right contig to view, in the drop down box. Zoom out (with the minus button) until annotations are visible. Your annotations may look like this: Zoom in (with the plus button) to see annotation details. Click on an annotation to see its sequence and source (e.g. the tool that predicted it). Why might there be several annotations over the same genome region? Click for answer One reason is that these are predictions from different tools - such as BLAT or HMMER. Repeat with new data Extension exercise We can assemble another chloroplast genome using sequence data from a different plant species: the snow gum, Eucalyptus pauciflora . This data is from Wang W, Schalamun M, Morales-Suarez A et al. 2018 . It is a subset of the original FASTQ read files (Illumina - SRR7153063, Nanopore - SRR7153095). Get data: at this Zenodo link , then upload to Galaxy. Check reads: Run Nanopolot on the nanopore reads. Assemble: Use Flye to assemble the nanopore reads, then get Fasta statistics Note: this may take several hours. Polish assembly: Use Pilon to polish the assembly with short Illumina reads. Note: Don\u2019t forget to map these Illumina reads to the assembly first using bwa-mem, then use the resulting bam file as input to Pilon. Annotate: Use the GeSeq tool at Chlorobox . Note: First download the polished.fasta file, then upload to Chlorobox. After annotation, download the GFF3 file from Chlorobox, then upload to Galaxy. View annotations: Use JBrowse to view the assembled, annotated genome. Note: JBrowse uses the polished.fasta file and the annotations GFF3 file. Tutorial summary What were the main steps in this tutorial? Click for answer Get data \u2192 Assemble \u2192 Polish \u2192 Annotate What common file types were used or created? Click for answer fastq fasta bam gff3 input_reads.fastq \u2192 assembly.fasta \u2192 mapped_short_reads_to_assembly.bam and polished_assembly.fasta \u2192 annotations.gff3 What\u2019s next? What can you do with an assembled genome? Common tasks are: Call (find) variants (SNPs) by comparing sequencing reads to the reference (the assembled genome). Find larger structural variants (SVs) by comparing multiple genomes. Use multiple genomes (or a set of genes within) for phylogenetic inference. Compare the genes found in one genome with another. See more tutorials in the left-hand panel or in our list of other bioinformatics tutorials .","title":"Assemble and annotate a chloroplast genome"},{"location":"modules/chloroplast_assembly/#assemble-and-annotate-a-chloroplast-genome","text":"*New* Feedback, comments, corrections: anna.syme @ rbg.vic.gov.au","title":"Assemble and annotate a chloroplast genome"},{"location":"modules/chloroplast_assembly/#what-is-genome-assembly","text":"Genome assembly is the process of joining together DNA sequencing fragments into longer pieces, ideally up to chromosome lengths. The DNA fragments are produced by DNA sequencing machines, and are called \u201creads\u201d. These are in lengths of about 150 nucleotides (base pairs), to up to a million+ nucleotides, depending on the sequencing technology used. Currently, most reads are from Illumina (short), PacBio (long) or Oxford Nanopore (long and extra-long). It is difficult to assemble plant genomes as they are often large (for example, 3,000,000,000 base pairs), have many repeat regions (such as transposons), and may be polyploid. This tutorial shows genome assembly for a smaller data set - the plant chloroplast genome - a single circular chromosome about 160,000 base pairs long.","title":"What is genome assembly?"},{"location":"modules/chloroplast_assembly/#whats-in-this-tutorial","text":"The chloroplast genome of the sweet potato has been sequenced. This has produced many sequencing reads - DNA fragments. We will try to join these reads together to make the whole chloroplast genome sequence. We will use the Galaxy Australia platform (a web page) to run our analysis. This tutorial assumes some familiarity with Galaxy and bioinformatics - if you are new to either of these, we recommend the Galaxy Australia Training tutorials Get started, Learn key tasks, Quality control, Genome assembly, and Genome annotation , as this chloroplast genome assembly tutorial is slightly more complicated. You can follow all the steps, or skip any optional steps: Get data \u2192 Read quality \u2192 Assemble\u2192 Polish \u2192 View reads \u2192 Annotate \u2192 Repeat with new data","title":"What's in this tutorial?"},{"location":"modules/chloroplast_assembly/#whats-not-in-this-tutorial","text":"The best assembly of the sweet potato chloroplast data: here, we are using a data subset. A full explanation of all the steps involved and all the possible variations in the workflow; answers to some of the questions. A workflow to assemble and annotate the chloroplast genome of any plant species: in this tutorial some steps are manual, and tools and settings may not be optimal for other plant species. A workflow to assemble the nuclear genome of any plant species. The process shown here is generally applicable to assembling plant nuclear genomes but there would be extra steps (and much more time) involved. For example, additional sequencing would usually be run on 10X, BioNano or HiC to produce information to link up longer nuclear chromosome pieces and to separate out the maternal and paternal haplotypes.","title":"What's not in this tutorial?"},{"location":"modules/chloroplast_assembly/#get-data","text":"Log in to Galaxy Australia and create a new history. The data is from this paper: Zhou C, Duarte T, Silvestre R et al. 2018 , hosted at EBI ENA. Original FASTQ reads: Illumina (SRR6828568) and Nanopore (SRR6828567). These data sets have been highly reduced in size for this tutorial. In a new browser tab, go to this webpage https://zenodo.org/record/3567224 Find the file called sweet-potato-chloroplast-illumina-reduced.fastq Right click on file name: select \u201ccopy link address\u201d In Galaxy, go to Get Data and then Upload File Click Paste/Fetch data A box will appear: paste in link address Click Start ; click Close The file will now appear in the top of your history panel. Repeat for the Nanopore reads sweet-potato-chloroplast-nanopore-reduced.fastq We now have two FASTQ read files in our history. Click on the eye icon next to one of the FASTQ sequence files. View the file in the centre Galaxy panel.","title":"Get data"},{"location":"modules/chloroplast_assembly/#check-read-quality","text":"Optional. Skip this section for a quicker tutorial We will look at the quality of the nanopore reads. In the tool panel, search for Nanoplot For Select multifile mode select batch . For Type of file to work on select fastq For files select the nanopore FASTQ file Click Execute There are five output files. View the Histogram Read Length file What summary statistics would be useful to look at? Click for answer This will depend on the aim of your analysis, but usually: Sequencing depth (the number of reads covering each base position; also called \u201ccoverage\u201d). Higher depth is usually better, but at very high depths it may be better to subsample the reads, as errors can swamp the assembly graph. Sequencing quality (the quality score indicates probability of base call being correct). You may trim or filter reads on quality. Phred quality scores are logarithmic: phred quality 10 = 90% chance of base call being correct; phred quality 20 = 99% chance of base call being correct. More detail here . Read lengths (read lengths histogram, and reads lengths vs. quality plots). Your analysis or assembly may need reads of a certain length. Optional further steps: Find out the quality of your reads using other tools such as fastp or FastQC. To visualize base quality using emoji you can also use FASTQE :smile: Run FASTQE for the illumina reads. In the output, look at the mean values (the middle row) Repeat FASTQE for the nanopore reads. In the tool settings, increase the maximum read length to 30000.","title":"Check read quality"},{"location":"modules/chloroplast_assembly/#assemble-reads","text":"Assemble: In the tool panel, search for \u201cFlye\u201d. For Input reads select sweet-potato-chloroplast-nanopore-reduced.fastq Leave other settings as default, except for estimated genome size add 160000 Click Execute View assembly outputs: There are five output files. Note: this tool is heuristic; your results may differ slightly from the results here, and if repeated. View the log file and scroll to the end. How many contigs (fragments) were assembled? What is the length of the assembly? View the assembly_info file. What are the contig names and lengths? The assembly sequence is in the consensus . Re-name this flye-assembly.fasta View the assembly: In the tool panel, search for \u201cBandage\u201d. Run \u201cBandage Info\u201d on the Flye output file Graphical Fragment Assembly (not the \u201cassembly_graph\u201d file) with the default settings. View the ouput file: how many nodes and edges are there? Run \u201cBandage Image\u201d on the Flye output file Graphical Fragment Assembly , clicking \u201cYes\u201d to display \u201cNode length labels\u201d. (Note that some text may be cut off this image due to a bug, under investigation). Your assembly graph may look like this: What is your interpretation of this assembly graph? Click for answer One interpretation is that this represents the typical circular chloroplast structure: There is a long single-copy region (the node of around 78,000 bp), connected to the inverted repeat (a node of around 28,000 bp), connected to the short single-copy region (of around 11,000 bp). In the graph, each end loop is a single-copy region (either long or short) and the centre bar is the collapsed inverted repeat which should have about twice the sequencing depth. Optional further steps: Repeat the Flye assembly with different parameters, and/or a filtered read set. Try an alternative assembly tool, such as Canu or Unicycler.","title":"Assemble reads"},{"location":"modules/chloroplast_assembly/#polish-assembly","text":"Short illumina reads are more accurate the nanopore reads. We will use them to correct errors in the nanopore assembly. Map short reads to the assembly: In the tool panel, search for \u201cbwa mem\u201d, and click on \u201cMap with BWA-MEM\u201d For Will you select a reference genome from your history select Use a genome from history For Use the following dataset as the reference sequence select flye-assembly.fasta For Algorithm for constructing the BWT index select Auto. Let BWA decide For Single or Paired-end reads select Single For Select fastq dataset select sweet-potato-illumina-reduced.fastq For Set read groups information? select Do not set For Select analysis mode select 1. Simple Illumina mode Click Execute This maps the short reads to the assembly, and creates an alignment file. Re-name this file illumina.bam Polish the assembly: In the tool panel, search for \u201cpilon\u201d, and click on \u201cpilon\u201d For Source for reference genome used for BAM alignments select Use a genome from history For Select a reference genome select flye-assembly.fasta For Type automatically determined by pilon click Yes For Input BAM file select illumina.bam For Variant calling mode select No For Create changes file select Yes Click Execute This compares the short reads to the assembly, and creates a polished (corrected) assembly file. There are two outputs: a fasta file and a changes file. What is in the changes file? Re-name the fasta output file polished-assembly.fasta Find and run the tool called \u201cFasta statistics\u201d on the original flye assembly and the polished version. How does the short-read Pilon-polished assembly compare to the unpolished flye-assembly.fasta ? Click for answer This will depend on the settings, but as an example: your polished assembly might be about 10-15 Kbp longer. Nanopore reads can have homopolymer deletions - a run of AAAA may be interpreted as AAA - so the more accurate illumina reads may correct these parts of the long-read assembly. In the Changes file, there may be a lot of cases showing a supposed deletion (represented by a dot) being corrected to a base. Optional further steps: Run a second round (or more) of Pilon polishing. Keep track of file naming; you will need to generate a new bam file first before each round of Pilon. Run an alternative polishing tool, such as Racon. This uses the long reads themselves to correct the long-read (Flye) assembly. It would be better to run this tool on the Flye assembly before running Pilon, rather than after Pilon.","title":"Polish assembly"},{"location":"modules/chloroplast_assembly/#view-reads","text":"Optional. Skip this entire section for a quicker tutorial We will look at the original sequencing reads mapped to the genome assembly. In a new browser tab, go to this webpage https://zenodo.org/record/3567224 See the two files with the \u201c-tiny\u201d in their file name. These are very cut-down files of sequencing reads. Upload these files to Galaxy. Map the reads: Map the Illumina reads (the new \u201ctiny\u201d dataset) to the polished-assembly.fasta , the same way we did before, using bwa mem. This creates one output file: re-name it illumina-tiny.bam Map the Nanopore reads (the new \u201ctiny\u201d dataset) to the polished-assembly.fasta . The settings will be the same, except Select analysis mode should be Nanopore . This creates one output file: re-name it nanopore-tiny.bam Create a visualization of the mapped reads: In the tool panel, search for \u201cJBrowse\u201d, and click on \u201cJBrowse genome browser\u201d This tool creates a visualization of our genome assembly with some of the original sequencing reads mapped to it. For Reference genome to display select Use a genome from history For Select the reference genome select polished-assembly.fasta For Produce Standalone Instance select Yes For Genetic Code select 11. The Bacterial, Archaeal and Plant Plastid Code For JBrowse-in-Galaxy Action select New JBrowse instance Insert Track Group Now we\u2019ll set up two tracks (or rows) to display underneath the assembled genome. One track will be the nanopore reads; one track will be the illumina reads. Insert Annotation Track . This is our first track, or row, to be displayed under the reference genome. For Track Type select BAM pileups For BAM track data select nanopore-tiny.bam . For Autogenerate SNP track click No . Leave the other track features as default. Insert Annotation Track . This is our second track, or row, to be displayed under the reference genome. For Track Type select BAM pileups For BAM track data select illumina-tiny.bam . For Autogenerate SNP track click No . Leave the other track features as default. Click Execute This may take a few minutes. There is one output file: re-name: assembly-and-reads View the JBrowse file: Click on the eye icon to view. (For more room, collapse Galaxy side menus with corner < > signs). Make sure the bam files are ticked in the left hand panel. Choose a contig in the drop down menu. Zoom in and out with + and - buttons. Reference and reads: zoomed-out view What are some reasons that the read coverage may vary across the reference genome? Click for answer There may be lots of reasons. Some possibilities: 1/ In areas of high read coverage: this region may be a collapsed repeat. 2/ In areas of low or no coverage: this region may be difficult to sequence; or, this region may be a misassembly. Reference and reads: zoomed-in view What are the differences between the nanopore and the illumina reads? Click for answer Nanopore reads are longer and have a higher error rate.","title":"View reads"},{"location":"modules/chloroplast_assembly/#annotate-genome","text":"Optional. Skip this section for a quicker tutorial We can now annotate our assembled genome with information about genomic features. Use a web-based tool to annotate: Download polished.fasta to your computer (click on the file in your history; then click on the disk icon). In a new broswer tab, go to Chlorobox where we will use the GeSeq tool to annotate our sequence. For FASTA file to annotate click + Upload File and select polished.fasta . Select Circular (it will then consider annotations that span ends) and Plastid . For Options tick Generate codon-based alignments For BLAT search leave defaults. For HMMER profile search tick Embryophta . For ARAGORN tick the box and leave defaults. For BLAT Reference Sequences tick MPI-MP chloroplast refrences For Actions , tick to accept the Disclaimer and Submit . A Results box will appear underneath and fill with files as they are created. When job status is finished , click on each of the OGDRAW files to view the annotations. Example of an annotated contig: For the longer contig, click on its GFF3 file, then click Download . (We will look at this contig only.) View the annotations in Galaxy: In Galaxy, in the tool panel, Get Data : Upload File : Choose local file GFF3 file : Start : Close Make a JBrowse file to view the annotations (the GFF3 file) under the assembly (the polished.fasta file). In the tool panel, search for \u201cJBrowse\u201d, and click on \u201cJBrowse genome browser\u201d For Reference genome to display select Use a genome from history For Select the reference genome select polished-assembly.fasta For Produce Standalone Instance select Yes For Genetic Code select 11. The Bacterial, Archaeal and Plant Plastid Code For JBrowse-in-Galaxy Action select New JBrowse instance Insert Track Group Insert Annotation Track . For Track Type select GFF/GFF3/BED/GBK Features For GFF/GFF3/BED Track Data select the GFF3 annotation file. Click Execute This may take a few minutes. There is one output file: re-name: view-annotations Click on the eye icon to view. Select the right contig to view, in the drop down box. Zoom out (with the minus button) until annotations are visible. Your annotations may look like this: Zoom in (with the plus button) to see annotation details. Click on an annotation to see its sequence and source (e.g. the tool that predicted it). Why might there be several annotations over the same genome region? Click for answer One reason is that these are predictions from different tools - such as BLAT or HMMER.","title":"Annotate genome"},{"location":"modules/chloroplast_assembly/#repeat-with-new-data","text":"Extension exercise We can assemble another chloroplast genome using sequence data from a different plant species: the snow gum, Eucalyptus pauciflora . This data is from Wang W, Schalamun M, Morales-Suarez A et al. 2018 . It is a subset of the original FASTQ read files (Illumina - SRR7153063, Nanopore - SRR7153095). Get data: at this Zenodo link , then upload to Galaxy. Check reads: Run Nanopolot on the nanopore reads. Assemble: Use Flye to assemble the nanopore reads, then get Fasta statistics Note: this may take several hours. Polish assembly: Use Pilon to polish the assembly with short Illumina reads. Note: Don\u2019t forget to map these Illumina reads to the assembly first using bwa-mem, then use the resulting bam file as input to Pilon. Annotate: Use the GeSeq tool at Chlorobox . Note: First download the polished.fasta file, then upload to Chlorobox. After annotation, download the GFF3 file from Chlorobox, then upload to Galaxy. View annotations: Use JBrowse to view the assembled, annotated genome. Note: JBrowse uses the polished.fasta file and the annotations GFF3 file.","title":"Repeat with new data"},{"location":"modules/chloroplast_assembly/#tutorial-summary","text":"What were the main steps in this tutorial? Click for answer Get data \u2192 Assemble \u2192 Polish \u2192 Annotate What common file types were used or created? Click for answer fastq fasta bam gff3 input_reads.fastq \u2192 assembly.fasta \u2192 mapped_short_reads_to_assembly.bam and polished_assembly.fasta \u2192 annotations.gff3","title":"Tutorial summary"},{"location":"modules/chloroplast_assembly/#whats-next","text":"What can you do with an assembled genome? Common tasks are: Call (find) variants (SNPs) by comparing sequencing reads to the reference (the assembled genome). Find larger structural variants (SVs) by comparing multiple genomes. Use multiple genomes (or a set of genes within) for phylogenetic inference. Compare the genes found in one genome with another. See more tutorials in the left-hand panel or in our list of other bioinformatics tutorials .","title":"What's next?"},{"location":"modules/data/","text":"Data When running bioinformatics analyses on the command-line, you may wish to use publicly-available data for testing or for analysis. Some examples of how to do this are given here, along with sample datasets. Get data with wget or curl At the command line, type: wget [address of file] or curl -o [give the file a name][address of file] More about wget: https://en.wikipedia.org/wiki/Wget More about curl: https://en.wikipedia.org/wiki/CURL SRA Toolkit Find some SRR numbers for reads you are interested in (search NCBI\u2019s SRA ) At the command line, type fastq-dump SRR[number goes here] Note: the SRR numbers refer to the sequencing run. https://www.ncbi.nlm.nih.gov/sra/docs/submitmeta/ Note: fasterq-dump is now also supported and fastq-dump may be deprecated in the future. More about the SRA Toolkit: https://github.com/ncbi/sra-tools/wiki Sample sequencing data PacBio reads From Canu\u2019s quickstart page: curl -L -o pacbio.fastq \\ http://gembox.cbcb.umd.edu/mhap/raw/ecoli_p6_25x.filtered.fastq Synthetic PacBio data wget https://zenodo.org/record/1009308/files/pacbio.fq?download=1 Nanopore reads From Canu\u2019s quickstart page; data from the Loman lab: curl -L -o oxford.fasta \\ http://nanopore.s3.climb.ac.uk/MAP006-PCR-1_2D_pass.fasta Downsampled nanopore data wget \\ https://zenodo.org/record/842795/files/minion_1.2d_pass.fastq.fastqsanger?download=1 fast5 files https://figshare.com/articles/Raw_ONT_reads_-_barcode_1/5353210 10X (linked) reads https://www.10xgenomics.com/resources/datasets/","title":"Data"},{"location":"modules/data/#data","text":"When running bioinformatics analyses on the command-line, you may wish to use publicly-available data for testing or for analysis. Some examples of how to do this are given here, along with sample datasets.","title":"Data"},{"location":"modules/data/#get-data-with-wget-or-curl","text":"At the command line, type: wget [address of file] or curl -o [give the file a name][address of file] More about wget: https://en.wikipedia.org/wiki/Wget More about curl: https://en.wikipedia.org/wiki/CURL","title":"Get data with wget or curl"},{"location":"modules/data/#sra-toolkit","text":"Find some SRR numbers for reads you are interested in (search NCBI\u2019s SRA ) At the command line, type fastq-dump SRR[number goes here] Note: the SRR numbers refer to the sequencing run. https://www.ncbi.nlm.nih.gov/sra/docs/submitmeta/ Note: fasterq-dump is now also supported and fastq-dump may be deprecated in the future. More about the SRA Toolkit: https://github.com/ncbi/sra-tools/wiki","title":"SRA Toolkit"},{"location":"modules/data/#sample-sequencing-data","text":"PacBio reads From Canu\u2019s quickstart page: curl -L -o pacbio.fastq \\ http://gembox.cbcb.umd.edu/mhap/raw/ecoli_p6_25x.filtered.fastq Synthetic PacBio data wget https://zenodo.org/record/1009308/files/pacbio.fq?download=1 Nanopore reads From Canu\u2019s quickstart page; data from the Loman lab: curl -L -o oxford.fasta \\ http://nanopore.s3.climb.ac.uk/MAP006-PCR-1_2D_pass.fasta Downsampled nanopore data wget \\ https://zenodo.org/record/842795/files/minion_1.2d_pass.fastq.fastqsanger?download=1 fast5 files https://figshare.com/articles/Raw_ONT_reads_-_barcode_1/5353210 10X (linked) reads https://www.10xgenomics.com/resources/datasets/","title":"Sample sequencing data"},{"location":"modules/databases/","text":"Databases Overview This page has links to databases for sequences, tools, workflows and plants. Some of these databases are for one plant species only; some are for a selection of species with tools to compare genome features. Most of these databases are linked to at least one other database by inputs or outputs. Databases are sometimes abandoned - look at the most recent update/release or news on the start page to find out if it is current. The ones in the links below seem to be active. There is no single standard repository for annotated genomes: these are held across various databases. Sequences and genome browsers NCBI: Sequence Read Archive: https://www.ncbi.nlm.nih.gov/sra NCBI: Genomes: https://www.ncbi.nlm.nih.gov/home/genomes/ NCBI: RefSeq: https://www.ncbi.nlm.nih.gov/refseq/ European Nucleotide Archive: (a mirror of NCBI but with different search options): https://www.ebi.ac.uk/ena Protein Databank: https://www.rcsb.org/ UniProt: protein sequences: https://www.uniprot.org/ Ensembl Plants: https://plants.ensembl.org/index.html JGI Phytozome: https://phytozome.jgi.doe.gov/pz/portal.html UCSC Genome Browser: https://genome.ucsc.edu/index.html TAIR - Arabidopsis thaliana : https://www.arabidopsis.org/ Genome database for Rosaceae: https://www.rosaceae.org/ Gramene - crops and model plant species: http://gramene.org/ PlaBiPD - includes a chronology and phylogeny of pubplished plant genomes: https://plabipd.de/index.ep PLAZA: https://bioinformatics.psb.ugent.be/plaza/ Plants and morphology Flora of Australia https://profiles.ala.org.au/opus/foa Plant traits https://www.try-db.org/TryWeb/Home.php","title":"Databases"},{"location":"modules/databases/#databases","text":"","title":"Databases"},{"location":"modules/databases/#overview","text":"This page has links to databases for sequences, tools, workflows and plants. Some of these databases are for one plant species only; some are for a selection of species with tools to compare genome features. Most of these databases are linked to at least one other database by inputs or outputs. Databases are sometimes abandoned - look at the most recent update/release or news on the start page to find out if it is current. The ones in the links below seem to be active. There is no single standard repository for annotated genomes: these are held across various databases.","title":"Overview"},{"location":"modules/databases/#sequences-and-genome-browsers","text":"NCBI: Sequence Read Archive: https://www.ncbi.nlm.nih.gov/sra NCBI: Genomes: https://www.ncbi.nlm.nih.gov/home/genomes/ NCBI: RefSeq: https://www.ncbi.nlm.nih.gov/refseq/ European Nucleotide Archive: (a mirror of NCBI but with different search options): https://www.ebi.ac.uk/ena Protein Databank: https://www.rcsb.org/ UniProt: protein sequences: https://www.uniprot.org/ Ensembl Plants: https://plants.ensembl.org/index.html JGI Phytozome: https://phytozome.jgi.doe.gov/pz/portal.html UCSC Genome Browser: https://genome.ucsc.edu/index.html TAIR - Arabidopsis thaliana : https://www.arabidopsis.org/ Genome database for Rosaceae: https://www.rosaceae.org/ Gramene - crops and model plant species: http://gramene.org/ PlaBiPD - includes a chronology and phylogeny of pubplished plant genomes: https://plabipd.de/index.ep PLAZA: https://bioinformatics.psb.ugent.be/plaza/","title":"Sequences and genome browsers"},{"location":"modules/databases/#plants-and-morphology","text":"Flora of Australia https://profiles.ala.org.au/opus/foa Plant traits https://www.try-db.org/TryWeb/Home.php","title":"Plants and morphology"},{"location":"modules/docker/","text":"Containers Containers are a collection of tools and their dependencies, packaged into a file. You can download and run this file and its software, without directly installing the software itself. Types of containers: Docker, Singularity The basics Download and install Docker Desktop: https://www.docker.com/products/docker-desktop Open docker (e.g.: if it\u2019s running, it may show an icon in the top menu bar). In the terminal (or equivalent): docker pull busybox //pulls the image named \"busybox\" from DockerHub docker run busybox //creates the container, then exits if no tasks are running docker run busybox ls //creates container, lists files, exits docker image ls //lists all docker images docker --help // docker help Getting files in and out of containers We will make a folder that can get share files with our containers. In your home directory (/Users/yourname/): mkdir workspace cd workspace docker run - v / Users /[ yourname ]/ workspace : / data / busybox touch data / plantfile -v connectes our local \u201cworkspace\u201d folder with a \u201cdata\u201d folder in the container. Around this, we docker run busybox Finally, we create a file with touch data/plantfile Example: assemble and annotate a bacterial genome Get some sample data files (synthetic bacterial illumina reads): wget https://zenodo.org/record/582600/files/mutant_R1.fastq?download=1 wget https://zenodo.org/record/582600/files/mutant_R2.fastq?download=1 Shorten the names: mv mutant_R1.fastq?download=1 mutant_R1.fastq mv mutant_R2.fastq?download=1 mutant_R2.fastq Run the assembly tool (spades) in a container: docker run - v / Users /[ yourname ]/ workspace : / data / quay . io / biocontainers / spades : 3.13.0 --0 ./usr/local/bin/spades.py -1 data/mutant_R1.fastq -2 data/mutant_R2.fastq -o data/spades_outdir quay.io/biocontainers/spades:3.13.0\u20130 is the image name ./usr/local/bin/spades.py is the command to run spades -1 specifies the file with forward reads, data/mutant_R1.fastq -2 specifies the file with reverse reads, data/mutant_R2.fastq -o specifies the output directory, data/spades_outdir ls //to see the output files in your local workspace folder Move the assembled reads - the contigs file - into the workspace folder: mv spades_outdir/contigs.fasta . Run the annotation tool (prokka) in a container: docker run - v / Users /[ yourname ]/ workspace : / data / ummidock / prokka : 1.13.3 - 01 prokka contigs . fasta ummidock/prokka:1.13.3-01 is the image name prokka is the command to run prokka the input file is contigs.fasta this container has been configured to start within the data folder, so \u201cdata/\u201d is not needed before the input file this container has also been configured to put output in the data folder, so it is not necessary to specify an output directory name ls //to see the annotation output cd PROKKA_outfile_name less PROKKA_outfile.txt //summary of annotation Troubleshooting How do we know what the command is to run the tool? Run the container interactively: e.g. docker run -it ummidock/prokka:1.13.3-01 Try the tool name and the help flag: e.g. prokka -h How do we know if the container has a data folder? Run the container, print the working directory: e.g. docker run ummidock/prokka:1.13.3-01 pwd If the working directory is called \u201cworkdir\u201d, use that in place of \u201cdata\u201d e.g. -v /Users/[yourname]/workspace:/workdir/ Links Docker: https://docs.docker.com/get-started/","title":"Docker"},{"location":"modules/docker/#containers","text":"Containers are a collection of tools and their dependencies, packaged into a file. You can download and run this file and its software, without directly installing the software itself. Types of containers: Docker, Singularity","title":"Containers"},{"location":"modules/docker/#the-basics","text":"Download and install Docker Desktop: https://www.docker.com/products/docker-desktop Open docker (e.g.: if it\u2019s running, it may show an icon in the top menu bar). In the terminal (or equivalent): docker pull busybox //pulls the image named \"busybox\" from DockerHub docker run busybox //creates the container, then exits if no tasks are running docker run busybox ls //creates container, lists files, exits docker image ls //lists all docker images docker --help // docker help","title":"The basics"},{"location":"modules/docker/#getting-files-in-and-out-of-containers","text":"We will make a folder that can get share files with our containers. In your home directory (/Users/yourname/): mkdir workspace cd workspace docker run - v / Users /[ yourname ]/ workspace : / data / busybox touch data / plantfile -v connectes our local \u201cworkspace\u201d folder with a \u201cdata\u201d folder in the container. Around this, we docker run busybox Finally, we create a file with touch data/plantfile","title":"Getting files in and out of containers"},{"location":"modules/docker/#example-assemble-and-annotate-a-bacterial-genome","text":"Get some sample data files (synthetic bacterial illumina reads): wget https://zenodo.org/record/582600/files/mutant_R1.fastq?download=1 wget https://zenodo.org/record/582600/files/mutant_R2.fastq?download=1 Shorten the names: mv mutant_R1.fastq?download=1 mutant_R1.fastq mv mutant_R2.fastq?download=1 mutant_R2.fastq Run the assembly tool (spades) in a container: docker run - v / Users /[ yourname ]/ workspace : / data / quay . io / biocontainers / spades : 3.13.0 --0 ./usr/local/bin/spades.py -1 data/mutant_R1.fastq -2 data/mutant_R2.fastq -o data/spades_outdir quay.io/biocontainers/spades:3.13.0\u20130 is the image name ./usr/local/bin/spades.py is the command to run spades -1 specifies the file with forward reads, data/mutant_R1.fastq -2 specifies the file with reverse reads, data/mutant_R2.fastq -o specifies the output directory, data/spades_outdir ls //to see the output files in your local workspace folder Move the assembled reads - the contigs file - into the workspace folder: mv spades_outdir/contigs.fasta . Run the annotation tool (prokka) in a container: docker run - v / Users /[ yourname ]/ workspace : / data / ummidock / prokka : 1.13.3 - 01 prokka contigs . fasta ummidock/prokka:1.13.3-01 is the image name prokka is the command to run prokka the input file is contigs.fasta this container has been configured to start within the data folder, so \u201cdata/\u201d is not needed before the input file this container has also been configured to put output in the data folder, so it is not necessary to specify an output directory name ls //to see the annotation output cd PROKKA_outfile_name less PROKKA_outfile.txt //summary of annotation","title":"Example: assemble and annotate a bacterial genome"},{"location":"modules/docker/#troubleshooting","text":"How do we know what the command is to run the tool? Run the container interactively: e.g. docker run -it ummidock/prokka:1.13.3-01 Try the tool name and the help flag: e.g. prokka -h How do we know if the container has a data folder? Run the container, print the working directory: e.g. docker run ummidock/prokka:1.13.3-01 pwd If the working directory is called \u201cworkdir\u201d, use that in place of \u201cdata\u201d e.g. -v /Users/[yourname]/workspace:/workdir/","title":"Troubleshooting"},{"location":"modules/docker/#links","text":"Docker: https://docs.docker.com/get-started/","title":"Links"},{"location":"modules/envs/","text":"Set up a vitual environment A virtual environment is an area to work in that is associated with certain tools and versions. It is often useful to work on different bioinformatics analyses or tasks in different virtual environments, as they may rely on particular versions of tools. One way to set this up is to use a package manager called conda. Install miniconda: https://docs.conda.io/en/latest/miniconda.html In the terminal (or equivalent), set up the bioconda channel: (More information: https://bioconda.github.io/ ) conda config --add channels defaults conda config --add channels bioconda conda config --add channels conda-forge This example shows how to set up and use an environment: conda create -- name mrbayes //create new environment called mrbayes conda activate mrbayes //activate this environment conda install mrbayes //install the \"mrbayes\" tool [ amazing analysis ] //run your analysis conda deactivate //deactive this environment Search here for tools: https://anaconda.org/bioconda/ Using conda conda env list //what environments have you set up? conda list -n mrbayes // what's installed in the mrbayes environment","title":"Envs"},{"location":"modules/envs/#set-up-a-vitual-environment","text":"A virtual environment is an area to work in that is associated with certain tools and versions. It is often useful to work on different bioinformatics analyses or tasks in different virtual environments, as they may rely on particular versions of tools. One way to set this up is to use a package manager called conda. Install miniconda: https://docs.conda.io/en/latest/miniconda.html In the terminal (or equivalent), set up the bioconda channel: (More information: https://bioconda.github.io/ ) conda config --add channels defaults conda config --add channels bioconda conda config --add channels conda-forge This example shows how to set up and use an environment: conda create -- name mrbayes //create new environment called mrbayes conda activate mrbayes //activate this environment conda install mrbayes //install the \"mrbayes\" tool [ amazing analysis ] //run your analysis conda deactivate //deactive this environment Search here for tools: https://anaconda.org/bioconda/","title":"Set up a vitual environment"},{"location":"modules/envs/#using-conda","text":"conda env list //what environments have you set up? conda list -n mrbayes // what's installed in the mrbayes environment","title":"Using conda"},{"location":"modules/galaxy/","text":"Galaxy Galaxy is a web platform for bioinformatics. There are many public Galaxy servers. Most are free to use, with some limits on the amount of data that can be stored. https://galaxyproject.org/ Australia\u2019s Galaxy server is https://usegalaxy.org.au/ . This is a free resource, accessed via the web page, and has lots of useful tools for analyses. Training for Galaxy Australia: https://galaxy-au-training.github.io/tutorials/ . Includes: Getting started, genome assembly and annotation, variant calling, RNA-seq, and workflows. Galaxy Training Network (for various Galaxy servers): https://training.galaxyproject.org/ . Includes: many tutorials in genomics, ecology, metabolomics, proteomics, and more. Galaxy Australia web page:","title":"Galaxy"},{"location":"modules/galaxy/#galaxy","text":"Galaxy is a web platform for bioinformatics. There are many public Galaxy servers. Most are free to use, with some limits on the amount of data that can be stored. https://galaxyproject.org/ Australia\u2019s Galaxy server is https://usegalaxy.org.au/ . This is a free resource, accessed via the web page, and has lots of useful tools for analyses. Training for Galaxy Australia: https://galaxy-au-training.github.io/tutorials/ . Includes: Getting started, genome assembly and annotation, variant calling, RNA-seq, and workflows. Galaxy Training Network (for various Galaxy servers): https://training.galaxyproject.org/ . Includes: many tutorials in genomics, ecology, metabolomics, proteomics, and more. Galaxy Australia web page:","title":"Galaxy"},{"location":"modules/help/","text":"Where to get help General or specific questions Biostars: https://www.biostars.org/ SeqAnswers: http://seqanswers.com/ StackOverflow: https://stackoverflow.com/ Bioinformatics Stack Exchange: https://bioinformatics.stackexchange.com/ Join the Plant Genomics Slack group: everyone welcome; for an invitation please email anna.syme @ rbg.vic.gov.au A software problem For command line tools, read the user documentation (this may be in the README on the code repository page). At the command line, try typing in any of these for information about inputs and options: toolname toolname -h toolname --help Some tools have groups on Slack, Gitter or Google that can be very responsive to questions. If the code is on GitHub, file an Issue (second tab at the top) Organisations Australasian Systematic Botany Society: http://asbs.org.au/ Australian Bioinformatics and Computational Biology Society: https://www.abacbs.org/","title":"Help"},{"location":"modules/help/#where-to-get-help","text":"","title":"Where to get help"},{"location":"modules/help/#general-or-specific-questions","text":"Biostars: https://www.biostars.org/ SeqAnswers: http://seqanswers.com/ StackOverflow: https://stackoverflow.com/ Bioinformatics Stack Exchange: https://bioinformatics.stackexchange.com/ Join the Plant Genomics Slack group: everyone welcome; for an invitation please email anna.syme @ rbg.vic.gov.au","title":"General or specific questions"},{"location":"modules/help/#a-software-problem","text":"For command line tools, read the user documentation (this may be in the README on the code repository page). At the command line, try typing in any of these for information about inputs and options: toolname toolname -h toolname --help Some tools have groups on Slack, Gitter or Google that can be very responsive to questions. If the code is on GitHub, file an Issue (second tab at the top)","title":"A software problem"},{"location":"modules/help/#organisations","text":"Australasian Systematic Botany Society: http://asbs.org.au/ Australian Bioinformatics and Computational Biology Society: https://www.abacbs.org/","title":"Organisations"},{"location":"modules/hpc/","text":"Apart from your local computer or server, you can analyse data on high-performance computers. HPC options in Australia NCI NCI is Australia\u2019s National Computational Infrastructure. You can apply for HPC access directly, or via your organisation if it is affiliated. http://nci.org.au/access/getting-access-to-the-national-facility/ Spartan at Melbourne University Melbourne University is not affiliated with NCI. Instead, you can use Spartan: https://dashboard.hpc.unimelb.edu.au/ Using HPC systems Introduction to HPC https://www.melbournebioinformatics.org.au/tutorials/tutorials/hpc/hpc/ How to use Spartan Write a slurm script \u201cSlurm\u201d schedules all the jobs on the computer. The slurm script tells the computer what to run. How to write a script https://dashboard.hpc.unimelb.edu.au/getting_started/ Generate a site_description Check which software is installed A very basic slurm script","title":"Hpc"},{"location":"modules/hpc/#hpc-options-in-australia","text":"NCI NCI is Australia\u2019s National Computational Infrastructure. You can apply for HPC access directly, or via your organisation if it is affiliated. http://nci.org.au/access/getting-access-to-the-national-facility/ Spartan at Melbourne University Melbourne University is not affiliated with NCI. Instead, you can use Spartan: https://dashboard.hpc.unimelb.edu.au/","title":"HPC options in Australia"},{"location":"modules/hpc/#using-hpc-systems","text":"Introduction to HPC https://www.melbournebioinformatics.org.au/tutorials/tutorials/hpc/hpc/ How to use Spartan Write a slurm script \u201cSlurm\u201d schedules all the jobs on the computer. The slurm script tells the computer what to run. How to write a script https://dashboard.hpc.unimelb.edu.au/getting_started/ Generate a site_description Check which software is installed A very basic slurm script","title":"Using HPC systems"},{"location":"modules/nextflow/","text":"Nextflow The basics Install nextflow Write a script to run a workflow Nextflow documentation is good - prob delete this below A nextflow script Make a file called weather.nf nano weather.nf Add this to the script: 1 2 3 4 5 6 7 #!/usr/bin process weather { echo true \"\"\" echo \"stormy\" \"\"\" } process is a step in the workflow echo \u201cstormy\u201d is the code block echo true allows it to print to screen the process is enclosed in these: { } Run the workflow: nextflow run weather.nf The screen will show: N E X T F L O W ~ version 19.01.0 Launching ` weather . nf ` [ stupefied_legentil ] - revision : eccaf7e744 [ warm up ] executor > local [ 4 a / bb33c4 ] Submitted process > weather stormy Our output is on the last line Although we printed the output to the screen, nextflow has also saved the output in a default work directory See [4a/bb33c4] next to Submitted process - this is the name of the exectued process called \u201cweather\u201d. This is also a folder of output in your work directory. cd 4a/bb33c4 (replace with your process number) ls -la to see hidden files (these start with a . ) less .command.out to look at output Inputs, outputs, channels Example script: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 #!/ usr / bin / env nextflow // env is a command that looks in the user 's path for nextflow //this will use whatever version of nextflow is first in the path //input file params.in = \"reads.fasta\" //a channel called \"sequences\" sequences = file(params.in) process split { input: file ' zebra . fa ' from sequences output: file ' part_zeb . fa ' into records // \"records\" will be a new channel \"\"\" head -10 zebra.fa > part_zeb.fa //note any programs in here need to be installed in the environment \"\"\" } process show { input : file x from records // \"records\" is a channel output : stdout result \"\"\" less $x //refer to variable x \"\"\" } result . subscribe { println it } Links https://nf-co.re/nextflow_tutorial https://github.com/nextflow-io/awesome-nextflow","title":"Nextflow"},{"location":"modules/nextflow/#nextflow","text":"","title":"Nextflow"},{"location":"modules/nextflow/#the-basics","text":"Install nextflow Write a script to run a workflow Nextflow documentation is good - prob delete this below","title":"The basics"},{"location":"modules/nextflow/#a-nextflow-script","text":"Make a file called weather.nf nano weather.nf Add this to the script: 1 2 3 4 5 6 7 #!/usr/bin process weather { echo true \"\"\" echo \"stormy\" \"\"\" } process is a step in the workflow echo \u201cstormy\u201d is the code block echo true allows it to print to screen the process is enclosed in these: { } Run the workflow: nextflow run weather.nf The screen will show: N E X T F L O W ~ version 19.01.0 Launching ` weather . nf ` [ stupefied_legentil ] - revision : eccaf7e744 [ warm up ] executor > local [ 4 a / bb33c4 ] Submitted process > weather stormy Our output is on the last line Although we printed the output to the screen, nextflow has also saved the output in a default work directory See [4a/bb33c4] next to Submitted process - this is the name of the exectued process called \u201cweather\u201d. This is also a folder of output in your work directory. cd 4a/bb33c4 (replace with your process number) ls -la to see hidden files (these start with a . ) less .command.out to look at output","title":"A nextflow script"},{"location":"modules/nextflow/#inputs-outputs-channels","text":"Example script: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 #!/ usr / bin / env nextflow // env is a command that looks in the user 's path for nextflow //this will use whatever version of nextflow is first in the path //input file params.in = \"reads.fasta\" //a channel called \"sequences\" sequences = file(params.in) process split { input: file ' zebra . fa ' from sequences output: file ' part_zeb . fa ' into records // \"records\" will be a new channel \"\"\" head -10 zebra.fa > part_zeb.fa //note any programs in here need to be installed in the environment \"\"\" } process show { input : file x from records // \"records\" is a channel output : stdout result \"\"\" less $x //refer to variable x \"\"\" } result . subscribe { println it }","title":"Inputs, outputs, channels"},{"location":"modules/nextflow/#links","text":"https://nf-co.re/nextflow_tutorial https://github.com/nextflow-io/awesome-nextflow","title":"Links"},{"location":"modules/papers/","text":"Papers Some useful papers about plant bioinformatics. Kersey PJ: Plant genome sequences: past, present, future. Curr. Opin. Plant Biol. 2019, 48:1\u20138. One Thousand Plant Transcriptomes Initiative: One thousand plant transcriptomes and the phylogenomics of green plants. Nature 2019, 574:679\u2013685. Dominguez Del Angel V, Hjerde E, Sterck L, Capella-Gutierrez S, Notredame C, Vinnere Pettersson O, Amselem J, Bouri L, Bocs S, Klopp C, Gibrat J-F, Vlasova A, Leskosek BL, Soler L, Binzer-Panchal M, Lantz H: Ten steps to get started in Genome Assembly and Annotation. F1000Res. 2018, 7. Ghurye J, Pop M: Modern technologies and algorithms for scaffolding assembled genomes. PLoS Comput. Biol. 2019, 15:e1006994. Paajanen P, Kettleborough G, L\u00f3pez-Girona E, Giolai M, Heavens D, Baker D, Lister A, Cugliandolo F, Wilde G, Hein I, Macaulay I, Bryan GJ, Clark MD: A critical comparison of technologies for a plant genome sequencing project. Gigascience 2019, 8. Jung H, Winefield C, Bombarely A, Prentis P, Waterhouse P: Tools and Strategies for Long-Read Sequencing and De Novo Assembly of Plant Genomes. Trends Plant Sci. 2019, 24:700\u2013724. Kyriakidou M, Tai HH, Anglin NL, Ellis D, Str\u00f6mvik MV: Current Strategies of Polyploid Plant Genome Sequence Assembly. Front. Plant Sci. 2018, 9:1660. Ott A, Schnable JC, Yeh C-T, Wu L, Liu C, Hu H-C, Dalgard CL, Sarkar S, Schnable PS: Linked read technology for assembling large complex and polyploid genomes. BMC Genomics 2018, 19:651. Wendel JF, Jackson SA, Meyers BC, Wing RA: Evolution of plant genome architecture . Genome Biol. 2016, 17:37. Chase MW, Christenhusz MJM, Fay MF, Byng JW, Judd WS, Soltis DE, Mabberley DJ, Sennikov AN, Soltis PS, Stevens PF: An update of the Angiosperm Phylogeny Group classification for the orders and families of flowering plants: APG IV. Bot. J. Linn. Soc. 2016, 181:1\u201320. Sedlazeck FJ, Lee H, Darby CA, Schatz MC: Piercing the dark matter: bioinformatics of long-range sequencing and mapping. Nat. Rev. Genet. 2018, 19:329\u2013346. Brewer GE, Clarkson JJ, Maurin O, Zuntini AR, Barber V, Bellot S, Biggs N, Cowan RS, Davies NMJ, Dodsworth S, Edwards SL, Eiserhardt WL, Epitawalage N, Frisby S, Grall A, Kersey PJ, Pokorny L, Leitch IJ, Forest F, Baker WJ: Factors Affecting Targeted Sequencing of 353 Nuclear Genes From Herbarium Specimens Spanning the Diversity of Angiosperms. Front. Plant Sci. 2019, 10:1102. Comai L, Maheshwari S, Marimuthu MPA: \u200b Plant centromeres\u200b. Curr. Opin. Plant Biol. 2017, 36:158\u2013167. Vicient CM, Casacuberta JM: Impact of transposable elements on polyploid plant genomes. Ann. Bot. 2017, 120:195\u2013207. Wang W, Das A, Kainer D, Schalamun M, Morales-Suarez A, Schwessinger B, Lanfear R: The draft nuclear genome assembly of Eucalyptus pauciflora: new approaches to comparing de novo assemblies. bioRxiv 2019:678730.","title":"Papers"},{"location":"modules/papers/#papers","text":"Some useful papers about plant bioinformatics. Kersey PJ: Plant genome sequences: past, present, future. Curr. Opin. Plant Biol. 2019, 48:1\u20138. One Thousand Plant Transcriptomes Initiative: One thousand plant transcriptomes and the phylogenomics of green plants. Nature 2019, 574:679\u2013685. Dominguez Del Angel V, Hjerde E, Sterck L, Capella-Gutierrez S, Notredame C, Vinnere Pettersson O, Amselem J, Bouri L, Bocs S, Klopp C, Gibrat J-F, Vlasova A, Leskosek BL, Soler L, Binzer-Panchal M, Lantz H: Ten steps to get started in Genome Assembly and Annotation. F1000Res. 2018, 7. Ghurye J, Pop M: Modern technologies and algorithms for scaffolding assembled genomes. PLoS Comput. Biol. 2019, 15:e1006994. Paajanen P, Kettleborough G, L\u00f3pez-Girona E, Giolai M, Heavens D, Baker D, Lister A, Cugliandolo F, Wilde G, Hein I, Macaulay I, Bryan GJ, Clark MD: A critical comparison of technologies for a plant genome sequencing project. Gigascience 2019, 8. Jung H, Winefield C, Bombarely A, Prentis P, Waterhouse P: Tools and Strategies for Long-Read Sequencing and De Novo Assembly of Plant Genomes. Trends Plant Sci. 2019, 24:700\u2013724. Kyriakidou M, Tai HH, Anglin NL, Ellis D, Str\u00f6mvik MV: Current Strategies of Polyploid Plant Genome Sequence Assembly. Front. Plant Sci. 2018, 9:1660. Ott A, Schnable JC, Yeh C-T, Wu L, Liu C, Hu H-C, Dalgard CL, Sarkar S, Schnable PS: Linked read technology for assembling large complex and polyploid genomes. BMC Genomics 2018, 19:651. Wendel JF, Jackson SA, Meyers BC, Wing RA: Evolution of plant genome architecture . Genome Biol. 2016, 17:37. Chase MW, Christenhusz MJM, Fay MF, Byng JW, Judd WS, Soltis DE, Mabberley DJ, Sennikov AN, Soltis PS, Stevens PF: An update of the Angiosperm Phylogeny Group classification for the orders and families of flowering plants: APG IV. Bot. J. Linn. Soc. 2016, 181:1\u201320. Sedlazeck FJ, Lee H, Darby CA, Schatz MC: Piercing the dark matter: bioinformatics of long-range sequencing and mapping. Nat. Rev. Genet. 2018, 19:329\u2013346. Brewer GE, Clarkson JJ, Maurin O, Zuntini AR, Barber V, Bellot S, Biggs N, Cowan RS, Davies NMJ, Dodsworth S, Edwards SL, Eiserhardt WL, Epitawalage N, Frisby S, Grall A, Kersey PJ, Pokorny L, Leitch IJ, Forest F, Baker WJ: Factors Affecting Targeted Sequencing of 353 Nuclear Genes From Herbarium Specimens Spanning the Diversity of Angiosperms. Front. Plant Sci. 2019, 10:1102. Comai L, Maheshwari S, Marimuthu MPA: \u200b Plant centromeres\u200b. Curr. Opin. Plant Biol. 2017, 36:158\u2013167. Vicient CM, Casacuberta JM: Impact of transposable elements on polyploid plant genomes. Ann. Bot. 2017, 120:195\u2013207. Wang W, Das A, Kainer D, Schalamun M, Morales-Suarez A, Schwessinger B, Lanfear R: The draft nuclear genome assembly of Eucalyptus pauciflora: new approaches to comparing de novo assemblies. bioRxiv 2019:678730.","title":"Papers"},{"location":"modules/phylogenomics/","text":"Under development: 2020 Phylogenomics The \u201cGenomics for Australian Plants\u201d project is working on the phylogenomics of Australian plant species. Link to project details: https://www.genomicsforaustralianplants.com/phylogenomics/ The project will likely use some aspects of the tool HybPiper: https://github.com/mossmatters/HybPiper A great set of tutorial material is available here: https://github.com/mossmatters/KewHybSeqWorkshop including how to assemble contigs with HybPiper, alignment, and phylogenomics. This is a clear description of using HypPiper in a computer cluster with Slurm commands: https://uribeconvers.wordpress.com/2017/04/24/377/","title":"Phylogenomics"},{"location":"modules/phylogenomics/#phylogenomics","text":"The \u201cGenomics for Australian Plants\u201d project is working on the phylogenomics of Australian plant species. Link to project details: https://www.genomicsforaustralianplants.com/phylogenomics/ The project will likely use some aspects of the tool HybPiper: https://github.com/mossmatters/HybPiper A great set of tutorial material is available here: https://github.com/mossmatters/KewHybSeqWorkshop including how to assemble contigs with HybPiper, alignment, and phylogenomics. This is a clear description of using HypPiper in a computer cluster with Slurm commands: https://uribeconvers.wordpress.com/2017/04/24/377/","title":"Phylogenomics"},{"location":"modules/rna/","text":"Under development: 2019","title":"Rna"},{"location":"modules/tools/","text":"Tools Search, containers, workflows Search for tools: https://bio.tools/ BioContainers: containers for bioinformatics: https://biocontainers.pro/#/ Docker Hub: docker containers: https://hub.docker.com/ nf-core: Nextflow workflows: https://nf-co.re/ Commonly-used tools BLAST Sequence matching: https://blast.ncbi.nlm.nih.gov/Blast.cgi Paper: A Guide to BLAST: https://f1000research.com/documents/7-1435 Tutorial: BLAST: https://isugenomics.github.io/bioinformatics-workbook/dataAnalysis/blast/blast_index bwa Map sequences against reference database: https://github.com/lh3/bwa minimap2 Map long read sequences against reference database: https://github.com/lh3/minimap2 Samtools Tools for processing alignment files: https://www.htslib.org/ Spades Genome assembly: http://cab.spbu.ru/software/spades/ Freebayes Variant calling: https://github.com/ekg/freebayes IQ-Tree Phylogenetics: http://www.iqtree.org/ Mothur Metagenomics: https://www.mothur.org/","title":"Tools"},{"location":"modules/tools/#tools","text":"","title":"Tools"},{"location":"modules/tools/#search-containers-workflows","text":"Search for tools: https://bio.tools/ BioContainers: containers for bioinformatics: https://biocontainers.pro/#/ Docker Hub: docker containers: https://hub.docker.com/ nf-core: Nextflow workflows: https://nf-co.re/","title":"Search, containers, workflows"},{"location":"modules/tools/#commonly-used-tools","text":"BLAST Sequence matching: https://blast.ncbi.nlm.nih.gov/Blast.cgi Paper: A Guide to BLAST: https://f1000research.com/documents/7-1435 Tutorial: BLAST: https://isugenomics.github.io/bioinformatics-workbook/dataAnalysis/blast/blast_index bwa Map sequences against reference database: https://github.com/lh3/bwa minimap2 Map long read sequences against reference database: https://github.com/lh3/minimap2 Samtools Tools for processing alignment files: https://www.htslib.org/ Spades Genome assembly: http://cab.spbu.ru/software/spades/ Freebayes Variant calling: https://github.com/ekg/freebayes IQ-Tree Phylogenetics: http://www.iqtree.org/ Mothur Metagenomics: https://www.mothur.org/","title":"Commonly-used tools"},{"location":"modules/tutorials/","text":"Bioinformatics tutorials Priority topics currently under development are genome assembly, phylogenomics, variant calling, and RNA-seq.These will appear as items in the left hand panel. Here are some links to resources that are particularly useful for getting started in plant bioinformatics: Unix: Software Carpentry tutorial: http://swcarpentry.github.io/shell-novice/ Guide to Unix: https://f1000research.com/documents/7-1436 Python: Software carpentry tutorial: http://swcarpentry.github.io/python-novice-gapminder/ Biopython: https://biopython.org/ Solving biological problems with python: http://pycam.github.io/ R: Software carpentry tutorial: http://swcarpentry.github.io/r-novice-inflammation/ Git: Software carpentry tutorial: http://swcarpentry.github.io/git-novice/ Algorithms: Coursera: https://www.coursera.org/learn/dna-sequencing Algorithms: Ben Langmead: https://www.youtube.com/user/BenLangmead Containers: https://github.com/pawseysc/bio-workshop-18 Docker: https://www.melbournebioinformatics.org.au/tutorials/tutorials/docker/docker/ Data Carpentry Genomics Workshop: https://datacarpentry.org/lessons/#genomics-workshop ISU Genomics: https://isugenomics.github.io/bioinformatics-workbook/ Gene expression on Coursera https://www.coursera.org/learn/plant-bioinformatics Sequence analysis workshop UCDavis: https://angus.readthedocs.io/en/2018/ Melbourne Bioinformatics: https://www.melbournebioinformatics.org.au/training-and-events/ Bioinformatics file formats and ontology: http://bioportal.bioontology.org/ontologies/EDAM The Biostar Handbook (not free): https://www.biostarhandbook.com/index.html Test yourself! Rosalind bioinformatics problems: http://rosalind.info/problems/locations/","title":"Tutorials"},{"location":"modules/tutorials/#bioinformatics-tutorials","text":"Priority topics currently under development are genome assembly, phylogenomics, variant calling, and RNA-seq.These will appear as items in the left hand panel. Here are some links to resources that are particularly useful for getting started in plant bioinformatics: Unix: Software Carpentry tutorial: http://swcarpentry.github.io/shell-novice/ Guide to Unix: https://f1000research.com/documents/7-1436 Python: Software carpentry tutorial: http://swcarpentry.github.io/python-novice-gapminder/ Biopython: https://biopython.org/ Solving biological problems with python: http://pycam.github.io/ R: Software carpentry tutorial: http://swcarpentry.github.io/r-novice-inflammation/ Git: Software carpentry tutorial: http://swcarpentry.github.io/git-novice/ Algorithms: Coursera: https://www.coursera.org/learn/dna-sequencing Algorithms: Ben Langmead: https://www.youtube.com/user/BenLangmead Containers: https://github.com/pawseysc/bio-workshop-18 Docker: https://www.melbournebioinformatics.org.au/tutorials/tutorials/docker/docker/ Data Carpentry Genomics Workshop: https://datacarpentry.org/lessons/#genomics-workshop ISU Genomics: https://isugenomics.github.io/bioinformatics-workbook/ Gene expression on Coursera https://www.coursera.org/learn/plant-bioinformatics Sequence analysis workshop UCDavis: https://angus.readthedocs.io/en/2018/ Melbourne Bioinformatics: https://www.melbournebioinformatics.org.au/training-and-events/ Bioinformatics file formats and ontology: http://bioportal.bioontology.org/ontologies/EDAM The Biostar Handbook (not free): https://www.biostarhandbook.com/index.html Test yourself! Rosalind bioinformatics problems: http://rosalind.info/problems/locations/","title":"Bioinformatics tutorials"},{"location":"modules/variants/","text":"Under development: 2019","title":"Variants"}]}